// func GetMovies(c *gin.Context) {
// 	pageStr := c.Query("page")
// 	sizeStr := c.Query("size")

// 	movies, err := repositories.GetMovies(pageStr, sizeStr)
// 	if err != nil {
// 		c.JSON(http.StatusInternalServerError, gin.H{"error": "Failed to retrieve movies"})
// 		return
// 	}
// 	c.JSON(http.StatusOK, movies)
// }

// func GetMovieByID(c *gin.Context) {
// 	id := c.Param("id")
// 	objID, err := primitive.ObjectIDFromHex(id)
// 	if err != nil {
// 		c.JSON(http.StatusBadRequest, gin.H{"error": "Invalid ID format"})
// 		return
// 	}

// 	movie, err := repositories.GetMovieByID(objID)
// 	if err != nil {
// 		c.JSON(http.StatusInternalServerError, gin.H{"error": fmt.Sprintf("Failed to retrieve movie by ID: %s", objID.Hex())})
// 		return
// 	}

// 	c.JSON(http.StatusOK, movie)
// }
